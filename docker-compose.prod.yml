version: '3.8'

services:
  # Backend API service
  backend:
    image: ghcr.io/${GITHUB_REPOSITORY}/backend:latest
    container_name: influencerflow-backend-prod
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - FRONTEND_URL=${FRONTEND_URL}
    env_file:
      - .env.production
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - influencerflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend service
  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY}/frontend:latest
    container_name: influencerflow-frontend-prod
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=${API_URL}
    restart: unless-stopped
    networks:
      - influencerflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: influencerflow-redis-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - influencerflow-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: influencerflow-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - influencerflow-network

volumes:
  redis-data:

networks:
  influencerflow-network:
    driver: bridge 